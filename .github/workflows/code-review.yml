name: Vogte Code Review

on:
  pull_request:
    types: [opened]

jobs:
  code-review:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Fetch full history to ensure we can compare with main/master
          fetch-depth: 0

      - name: Fetch base branch
        run: git fetch origin ${{ github.event.pull_request.base.ref }}:${{ github.event.pull_request.base.ref }}

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.25"

      - name: Install vogte
        run: go install github.com/piqoni/vogte@latest

      - name: Run vogte review
        id: review
        run: |
          # Create PR description from GitHub context
          PR_DESCRIPTION="${{ github.event.pull_request.title }}

          ${{ github.event.pull_request.body }}"

          # Run vogte and capture output
          REVIEW_OUTPUT=$(vogte -review "$PR_DESCRIPTION" 2>&1 || echo "Review failed")

          # Save output for next step (handle multiline)
          echo "REVIEW_OUTPUT<<EOF" >> $GITHUB_OUTPUT
          echo "$REVIEW_OUTPUT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const reviewOutput = ${{ toJson(steps.review.outputs.REVIEW_OUTPUT) }};

            const commentBody = `## ðŸ¤– Vogte Code Review

            ${reviewOutput}

            ---
            *This review was automatically generated by [vogte](https://github.com/piqoni/vogte)*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: commentBody
            });
